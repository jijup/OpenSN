/**
 * PrimeGradient.h
 * Authors: Sheldon Taylor, Jiju Poovvancheri
 *
 * A gradient noise implementation with prime numbers as gradients.
 */

#include "../HashFunctions.h"

#include <iostream>
#include <cstdlib>
#include <ctime>
#include <cmath>
#include <glm/glm/glm.hpp>

#ifndef _PRIMEGRADIENT_H_
#define _PRIMEGRADIENT_H_

class PrimeGradient {
public:
    PrimeGradient();
	~PrimeGradient();

    // Sets width and height
    void setDimensions(int width, int height);

    // Sets hashing mechanism
    void setPairingFunction(int pairingFunction);

	// Smooth value
	float fade(float x);

	// Interpolate value
	float lerp(float a, float b, float x);

	// Determines if a single value is prime
	bool isPrime(int val);

	// Find all primes up to a certain value
	void sieve(int offset, int numPrimes);

	// Generates a Perlin noise value, given some 3D coordinates (X, Y, Z).
	float noise(float sample_x, float sample_y, float sample_z);

private:
	int width;
	int height;

	HashFunctions hashInstance;
	int pairingFunction;

    int numPrimes, offset;
	int *prime;

	// 256 smallest primes
    int prime_sm[256] {
            2,      3,      5,      7,      11,     13,     17,     19,     23,     29,
            31,     37,     41,     43,     47,     53,     59,     61,     67,     71,
            73,     79,     83,     89,     97,     101,    103,    107,    109,    113,
            127,    131,    137,    139,    149,    151,    157,    163,    167,    173,
            179,    181,    191,    193,    197,    199,    211,    223,    227,    229,
            233,    239,    241,    251,    257,    263,    269,    271,    277,    281,
            283,    293,    307,    311,    313,    317,    331,    337,    347,    349,
            353,    359,    367,    373,    379,    383,    389,    397,    401,    409,
            419,    421,    431,    433,    439,    443,    449,    457,    461,    463,
            467,    479,    487,    491,    499,    503,    509,    521,    523,    541,
            547,    557,    563,    569,    571,    577,    587,    593,    599,    601,
            607,    613,    617,    619,    631,    641,    643,    647,    653,    659,
            661,    673,    677,    683,    691,    701,    709,    719,    727,    733,
            739,    743,    751,    757,    761,    769,    773,    787,    797,    809,
            811,    821,    823,    827,    829,    839,    853,    857,    859,    863,
            877,    881,    883,    887,    907,    911,    919,    929,    937,    941,
            947,    953,    967,    971,    977,    983,    991,    997,    1009,   1013,
            1019,   1021,   1031,   1033,   1039,   1049,   1051,   1061,   1063,   1069,
            1087,   1091,   1093,   1097,   1103,   1109,   1117,   1123,   1129,   1151,
            1153,   1163,   1171,   1181,   1187,   1193,   1201,   1213,   1217,   1223,
            1229,   1231,   1237,   1249,   1259,   1277,   1279,   1283,   1289,   1291,
            1297,   1301,   1303,   1307,   1319,   1321,   1327,   1361,   1367,   1373,
            1381,   1399,   1409,   1423,   1427,   1429,   1433,   1439,   1447,   1451,
            1453,   1459,   1471,   1481,   1483,   1487,   1489,   1493,   1499,   1511,
            1523,   1531,   1543,   1549,   1553,   1559,   1567,   1571,   1579,   1583,
            1597,   1601,   1607,   1609,   1613,   1619
    };

    int prime_lg[256] = {
            65537,  65539,  65543,  65551,  65557,  65563,  65579,  65581,
            65587,  65599,  65609,  65617,  65629,  65633,  65647,  65651,  65657,  65677,
            65687,  65699,  65701,  65707,  65713,  65717,  65719,  65729,  65731,  65761,
            65777,  65789,  65809,  65827,  65831,  65837,  65839,  65843,  65851,  65867,
            65881,  65899,  65921,  65927,  65929,  65951,  65957,  65963,  65981,  65983,
            65993,  66029,  66037,  66041,  66047,  66067,  66071,  66083,  66089,  66103,
            66107,  66109,  66137,  66161,  66169,  66173,  66179,  66191,  66221,  66239,
            66271,  66293,  66301,  66337,  66343,  66347,  66359,  66361,  66373,  66377,
            66383,  66403,  66413,  66431,  66449,  66457,  66463,  66467,  66491,  66499,
            66509,  66523,  66529,  66533,  66541,  66553,  66569,  66571,  66587,  66593,
            66601,  66617,  66629,  66643,  66653,  66683,  66697,  66701,  66713,  66721,
            66733,  66739,  66749,  66751,  66763,  66791,  66797,  66809,  66821,  66841,
            66851,  66853,  66863,  66877,  66883,  66889,  66919,  66923,  66931,  66943,
            66947,  66949,  66959,  66973,  66977,  67003,  67021,  67033,  67043,  67049,
            67057,  67061,  67073,  67079,  67103,  67121,  67129,  67139,  67141,  67153,
            67157,  67169,  67181,  67187,  67189,  67211,  67213,  67217,  67219,  67231,
            67247,  67261,  67271,  67273,  67289,  67307,  67339,  67343,  67349,  67369,
            67391,  67399,  67409,  67411,  67421,  67427,  67429,  67433,  67447,  67453,
            67477,  67481,  67489,  67493,  67499,  67511,  67523,  67531,  67537,  67547,
            67559,  67567,  67577,  67579,  67589,  67601,  67607,  67619,  67631,  67651,
            67679,  67699,  67709,  67723,  67733,  67741,  67751,  67757,  67759,  67763,
            67777,  67783,  67789,  67801,  67807,  67819,  67829,  67843,  67853,  67867,
            67883,  67891,  67901,  67927,  67931,  67933,  67939,  67943,  67957,  67961,
            67967,  67979,  67987,  67993,  68023,  68041,  68053,  68059,  68071,  68087,
            68099,  68111,  68113,  68141,  68147,  68161,  68171,  68207,  68209,  68213,
            68219,  68227,  68239,  68261,  68279,  68281,  68311,  68329
    };

    //p = [65537,  65539,  65543,  65551,  65557,  65563,  65579,  65581,65587,  65599,  65609,  65617,  65629,  65633,  65647,  65651,  65657,  65677,65687,  65699,  65701,  65707,  65713,  65717,  65719,  65729,  65731,  65761,65777,  65789,  65809,  65827,  65831,  65837,  65839,  65843,  65851,  65867,65881,  65899,  65921,  65927,  65929,  65951,  65957,  65963,  65981,  65983,65993,  66029,  66037,  66041,  66047,  66067,  66071,  66083,  66089,  66103,66107,  66109,  66137,  66161,  66169,  66173,  66179,  66191,  66221,  66239,66271,  66293,  66301,  66337,  66343,  66347,  66359,  66361,  66373,  66377,66383,  66403,  66413,  66431,  66449,  66457,  66463,  66467,  66491,  66499,66509,  66523,  66529,  66533,  66541,  66553,  66569,  66571,  66587,  66593,66601,  66617,  66629,  66643,  66653,  66683,  66697,  66701,  66713,  66721,66733,  66739,  66749,  66751,  66763,  66791,  66797,  66809,  66821,  66841,66851,  66853,  66863,  66877,  66883,  66889,  66919,  66923,  66931,  66943,66947,  66949,  66959,  66973,  66977,  67003,  67021,  67033,  67043,  67049,67057,  67061,  67073,  67079,  67103,  67121,  67129,  67139,  67141,  67153,67157,  67169,  67181,  67187,  67189,  67211,  67213,  67217,  67219,  67231,67247,  67261,  67271,  67273,  67289,  67307,  67339,  67343,  67349,  67369,67391,  67399,  67409,  67411,  67421,  67427,  67429,  67433,  67447,  67453,67477,  67481,  67489,  67493,  67499,  67511,  67523,  67531,  67537,  67547,67559,  67567,  67577,  67579,  67589,  67601,  67607,  67619,  67631,  67651,67679,  67699,  67709,  67723,  67733,  67741,  67751,  67757,  67759,  67763,67777,  67783,  67789,  67801,  67807,  67819,  67829,  67843,  67853,  67867,67883,  67891,  67901,  67927,  67931,  67933,  67939,  67943,  67957,  67961,67967,  67979,  67987,  67993,  68023,  68041,  68053,  68059,  68071,  68087,68099,  68111,  68113,  68141,  68147,  68161,  68171,  68207,  68209,  68213,68219,  68227,  68239,  68261,  68279,  68281,  68311,  68329]
    //p = [2,      3,      5,      7,      11,     13,     17,     19,     23,     29,31,     37,     41,     43,     47,     53,     59,     61,     67,     71,73,     79,     83,     89,     97,     101,    103,    107,    109,    113,127,    131,    137,    139,    149,    151,    157,    163,    167,    173,179,    181,    191,    193,    197,    199,    211,    223,    227,    229,233,    239,    241,    251,    257,    263,    269,    271,    277,    281,283,    293,    307,    311,    313,    317,    331,    337,    347,    349,353,    359,    367,    373,    379,    383,    389,    397,    401,    409,419,    421,    431,    433,    439,    443,    449,    457,    461,    463,467,    479,    487,    491,    499,    503,    509,    521,    523,    541,547,    557,    563,    569,    571,    577,    587,    593,    599,    601,607,    613,    617,    619,    631,    641,    643,    647,    653,    659,661,    673,    677,    683,    691,    701,    709,    719,    727,    733,739,    743,    751,    757,    761,    769,    773,    787,    797,    809,811,    821,    823,    827,    829,    839,    853,    857,    859,    863,877,    881,    883,    887,    907,    911,    919,    929,    937,    941,947,    953,    967,    971,    977,    983,    991,    997,    1009,   1013,1019,   1021,   1031,   1033,   1039,   1049,   1051,   1061,   1063,   1069,1087,   1091,   1093,   1097,   1103,   1109,   1117,   1123,   1129,   1151,1153,   1163,   1171,   1181,   1187,   1193,   1201,   1213,   1217,   1223,1229,   1231,   1237,   1249,   1259,   1277,   1279,   1283,   1289,   1291,1297,   1301,   1303,   1307,   1319,   1321,   1327,   1361,   1367,   1373,1381,   1399,   1409,   1423,   1427,   1429,   1433,   1439,   1447,   1451,1453,   1459,   1471,   1481,   1483,   1487,   1489,   1493,   1499,   1511,1523,   1531,   1543,   1549,   1553,   1559,   1567,   1571,   1579,   1583,1597,   1601,   1607,   1609,   1613,   1619]

};

#endif
